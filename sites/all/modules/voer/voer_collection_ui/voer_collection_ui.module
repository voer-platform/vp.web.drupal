<?php

define('VOER_COLLECTION_UI', 'voer_collection_ui');

function voer_collection_ui_menu(){
  $items['collection/all'] = array(
    'title' => t('List collections'),
    'page callback' => 'show_collection_list_page',
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function voer_collection_ui_theme(&$existing) {
  $themes = array(
    'node__collection__type' => array(
      'path' => drupal_get_path('module', 'VOER_COLLECTION_UI') . '/theme',
      'render element' => 'elements',
      'template' => 'node--collection--type',
    ),
    'node__collection__type__collection__list' => array(
      'path' => drupal_get_path('module', 'VOER_COLLECTION_UI') . '/theme',
      'render element' => 'elements',
      'template' => 'node--collection--type--collection--list',
    ),
    'commerce_product__product_in_cart' => array(
      'path' => drupal_get_path('module', 'VOER_COLLECTION_UI') . '/theme',
      'render element' => 'elements',
      'template' => 'commerce_product__product_in_cart',
    ),
  );
  return $themes;
}

function voer_collection_ui_block_info(){
  $blocks['voer_collection_outline_block'] = array(
    'info' => t('VOER Collection Outline'),
  );
  return $blocks;
}

function voer_collection_ui_block_view($delta=''){
  $block = array();

  switch($delta) {
    case 'voer_collection_outline_block' :
      $block['content'] = voer_collection_outline_block_view();
      break;
  }

  return $block;
}

function voer_collection_outline_block_view(){
  $current_path = isset($_GET['q']) ? $_GET['q'] : "";
  $params = explode("/", $current_path);
  if ($params[0] == "node" || $params[0] == "collection"){
    if (isset($params[1])){
      $node = node_load($params[1]);
      if ($node->type == "voer_collection"){
        $outline = $node->field_voer_outline[$node->language][0]['value'];
        $outline = json_decode($outline);
        if (isset($outline->content)){
          $items = array();
          foreach ($outline->content as $item){
            $items[] = _walk_through($item, $node->nid);
          }
          return theme('item_list', array("items" => $items, 'attributes' => array('class' => 'nav nav-list')));
        }
      }
    }
  }
  return "";
}

function _walk_through($item, $nid = 0){
  $a = array();
  if ($item->type == "module"){
    $mid = $item->id;
    $version = isset($item->version) ? $item->version : "";
    $a['data'] = l($item->title, 'collection/' . $nid . "/" .$mid);
  }else if ($item->type == 'subcollection'){
    $first = true;
    foreach ($item->content as $m){
      if ($first){
        $a['data'] = l($item->title, 'collection/' . $nid . "/" . (isset($m->id) ? $m->id : ""));
        $first = false;
      }
      $r = _walk_through($m, $nid);
      $a['children'][] = $r;
    }
    if ($first){
      $a['data'] = l($item->title, 'collection/' . $nid . "/");
    }
  }
  return $a;
}

function show_collection_list_page() {
  module_load_include('inc', 'voer_api');
  try {
    $page = isset($_GET['page']) ? $_GET['page'] : 0;
    $materials = voer_api_get_all_materials(VOER_MATERIAL_TYPE_COLLECTION, $page + 1);
    if ($materials->count == 0){
      return t("Collection not found!");
    }else{
      $nodes = array();
      pager_default_initialize($materials->count, 10);
      foreach ($materials->results as $key => $material) {
        $node = new stdClass();
        $node->type = 'voer_collection';
        node_object_prepare($node);
        $node->title = $material->title;
        $node->material_id = $material->material_id;
        $node->nid = $key;
        $node->comment = 0;
        $node->field_voer_description[LANGUAGE_NONE][0]['value'] = $material->description;
        $nodes[] = $node;
      }
      $output = node_view_multiple($nodes);
      $output['pager'] = array('#markup' => theme('pager'));
      return $output;
    }
  } catch (Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
    return "";
  }
}
