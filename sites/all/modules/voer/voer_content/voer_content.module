<?php
define('VOER_MATERIAL_TYPE_TEXT', 1);
define('VOER_MATERIAL_TYPE_VIDEO', 2);

define('VOER_MATERIAL_LICENSE_FORM', 'material_license_form');
define('VOER_MATERIAL_METADATA_FORM', 'material_metadata_form');
define('VOER_MATERIAL_CONTENT_FORM', 'material_content_form');



/**
 * Implements hook_admin_paths
 * @return [type] [description]
 */
function voer_content_admin_paths(){
  $paths = array(
    'voer_content/*/add' => TRUE,
    'node/*/publish' => TRUE,
  );
  return $paths;
}

/**
 * Implements hook_menu_alter().
 */
function voer_content_menu_alter(&$items) {
  // Modify add voer module
  $items['node/add/voer-module']['page callback'] = 'voer_module_creation';
  $items['node/add/voer-module']['file'] =  'voer_content_module.inc';
  $items['node/add/voer-module']['file path'] = drupal_get_path('module', 'voer_content');

  // Modify add voer module
  $items['node/add/voer-collection']['page callback'] = 'voer_collection_creation';
  $items['node/add/voer-collection']['file'] =  'voer_content_collection.inc';
  $items['node/add/voer-collection']['file path'] = drupal_get_path('module', 'voer_content');
}

/**
 * Implements hook_menu().
 */
function voer_content_menu() {
  $items = array();

  $items['category/%voer_category'] = array(
    'title callback' => 'voer_category_title',
    'title arguments' => array(1),
    'page callback' => 'show_materials_by_category',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'file' => 'voer_content.pages.inc',
  );

  return $items;
}

function voer_content_preprocess_node(&$variables){
  // dpm($variables);
  $type = $variables['type'];
  if ($type == 'voer_module'){
    $variables['page'] = $variables['view_mode'] == 'full';
    if (isset($variables['material_id'])){
      $module_path =  "module/" . $variables['material_id'];
      $variables['node_url'] = base_path() . $module_path;
      $variables['content']['links']['node']['#links']['node-readmore']['href'] = $module_path;
    }
  }
}

function voer_category_load($id = NULL, $reset = FALSE){
  module_load_include('inc', 'voer_api');
  try {
    $c = voer_api_get_category($id);
    return $c;
  } catch (Exception $e) {
    return FALSE;
  }
}

/**
 * [voer_content_title description]
 * @param  [type] $content [description]
 * @return [type]          [description]
 */
function voer_content_title($content){
  return $content->title;
}



// HUY.VQ --------------------------------

/**
 * Implements hook_form_alter().
 */
function voer_content_form_alter(&$form, &$form_state, $form_id) {
  $node = new stdClass();

  if (arg(0) == 'node') {
    $nid = arg(1);

    if ($nid) {
      $node = node_load($nid);
    }
  }

  if ($form_id == 'voer_module_node_form') {
    global $user;

    //hide if user has not roles
    if (!in_array('administrator', $user->roles)) {
      $form['menu']['#access'] = FALSE;
      $form['revision_information']['#access'] = false;
      $form['options']['#access'] = false;
      $form['comment_settings']['#access'] = false;
      $form['author']['#access'] = false;
      $form['path']['#access'] = false;
    }

    $form['material_content_form'] = array(
      '#type' => 'fieldset',
      '#title' => t('Metadata'),
      '#group' => 'additional_settings',
      '#weight' => -10,
    );

    // $form['material_content_form']['title'] = $form['title'];
    // $form['material_content_form']['field_voer_description'] = $form['field_voer_description'];
    // $form['material_content_form']['field_voer_image'] = $form['field_voer_image'];
    $form['material_content_form']['field_voer_language'] = $form['field_voer_language'];
    // $form['material_content_form']['field_voer_file'] = $form['field_voer_file'];
    $form['material_content_form']['field_voer_keywords'] = $form['field_voer_keywords'];
    $form['material_content_form']['field_voer_material_id'] = $form['field_voer_material_id'];
    $form['material_content_form']['field_voer_material_version'] = $form['field_voer_material_version'];

    // dpm($form['field_voer_keywords']);

    // unset($form['title']);
    // unset($form['field_voer_description']);
    // unset($form['field_voer_image']);
    unset($form['field_voer_language']);
    unset($form['field_voer_file']);
    unset($form['field_voer_material_type']);
    unset($form['field_voer_material_id']);
    unset($form['field_voer_material_version']);
    unset($form['field_voer_keywords']);

    if (empty($node->field_voer_material_id[LANGUAGE_NONE][0]['value'])){
      $form['actions']['publish'] = array(
        '#type'=> 'submit',
        '#value'=> 'Publish',
        '#weight'=> 11,
        '#submit' => array('voer_content_form_push'),
      );
    }
  }

  return $form;
}

/**
 * post data to server
 *
 * @param unknown_type $form
 * @param unknown_type $form_state
 */
function voer_content_form_push($form, &$form_state)
{
  module_load_include('inc', 'voer_content');
  if (arg(0) == 'node') {
    $nid = arg(1);
    if ($nid) {
      // dpm($form_state);
      $node = node_load($nid);
      $node->title = $form_state['values']['title'];
      $node->body = $form_state['values']['body'];
      $node->field_voer_keywords = $form_state['values']['field_voer_keywords'];
      $node->field_voer_language = $form_state['values']['field_voer_language'];
      $node->field_voer_description = $form_state['values']['field_voer_description'];
      // $node->field_category = $form_state['values']['field_category'];
      $result = publish_module($node);
      // dpm($result);
      if ($result === FALSE){
        drupal_set_message(t("The module publish was not successful!"));
      }else{
        drupal_set_message(t("The module publish was successful!"));
        $node->field_voer_material_id[LANGUAGE_NONE][0]['value'] = $result->material_id;
        $node->field_voer_material_version[LANGUAGE_NONE][0]['value'] = $material->version;
        node_save($node);
        drupal_goto("node/" . $node->nid);
      }
    }
  }
}


