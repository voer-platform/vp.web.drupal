<?php

/**
 * Implementation of hook_install().
 */
function voer_content_install() {
  $types = array(
    array(
      'type' => 'voer_module',
      'name' => st('Module'),
      'base' => 'node_content',
      'description' => st("Use <em>module</em> for your small content, such as a tutorial, a chapter of book."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
    array(
      'type' => 'voer_collection',
      'name' => st('Collection'),
      'base' => 'node_content',
      'description' => st('Use <em>collection</em> for time-sensitive content like news, press releases or blog posts.'),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
    array(
      'type' => 'voer_course',
      'name' => st('Course'),
      'base' => 'node_content',
      'description' => st('Use <em>course</em> for design a courseware.'),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  //add fields
  _voer_content_create_fields();
  //add instances
  _voer_module_create_instance_fields();
  _voer_collection_create_instance_fields();
}

function _voer_content_create_fields(){
  //DESCRIPTION
  if (!field_info_field('field_voer_description')){
    $field_voer_image = array(
      'field_name' => 'field_voer_description',
      'type' => 'text_long',
      'entity_types' => array('node'),
    );
    field_create_field($field_voer_image);
  }

  // IMAGE FIELD
  // Check if our field is not already created.
  if (!field_info_field('field_voer_image')){
    $field_voer_image = array(
      'field_name' => 'field_voer_image',
      'type' => 'image',
      'entity_types' => array('node'),
    );
    field_create_field($field_voer_image);
  }


  // LANGUAGE FIELD
  if (!field_info_field('field_voer_language')) {
    $field_voer_language = array(
        'field_name' => 'field_voer_language',
        'type' => 'list_text',
        'settings' => array(
          'allowed_values' => array(
            'vi' => st('Vietnamese'),
            'en' => st('English')
          ),
        ),
        'entity_types' => array('node'),
    );
    field_create_field($field_voer_language);
  }

  // LANGUAGE FIELD
  if (!field_info_field('field_voer_file')) {
    $field_voer_file = array(
        'field_name' => 'field_voer_file',
        'type' => 'file',
        'settings' => array(
          'file_extensions' => 'zip txt pdf',
        ),
        'entity_types' => array('node'),
    );
    field_create_field($field_voer_file);
  }

  // KEYWORD FIELD
  if (!field_info_field('field_voer_keywords')) {
    $field_voer_keywords = array(
        'field_name' => 'field_voer_keywords',
        'type' => 'text',
        'entity_types' => array('node'),
    );
    field_create_field($field_voer_keywords);
  }

  // MATERIAL_ID FIELD
  if (!field_info_field('field_voer_material_id')) {
    $field_voer_material_id = array(
        'field_name' => 'field_voer_material_id',
        'type' => 'text',
        'entity_types' => array('node'),
    );
    field_create_field($field_voer_material_id);
  }

  // MATERIAL_TYPE
  if (!field_info_field('field_voer_material_type')) {
    $field_voer_material_type = array(
        'field_name' => 'field_voer_material_type',
        'type' => 'number_integer',
        'entity_types' => array('node'),
    );
    field_create_field($field_voer_material_type);
  }

  // VERSION FIELD
  if (!field_info_field('field_voer_material_version')) {
    $field_voer_material_version = array(
        'field_name' => 'field_voer_material_version',
        'type' => 'text',
        'entity_types' => array('node'),
    );
    field_create_field($field_voer_material_version);
  }

  // VERSION FIELD
  if (!field_info_field('field_voer_categories')) {
    $field_voer_categories = array(
        'field_name' => 'field_voer_categories',
        'type' => 'field_voer_categories',
        'entity_types' => array('node'),
    );
    field_create_field($field_voer_categories);
  }

  // AUTHOR
  if (!field_info_field('field_voer_authors')) {
    $field_voer_authors = array(
        'field_name' => 'field_voer_authors',
        'type' => 'field_voer_authors',
        'entity_types' => array('node'),
    );
    field_create_field($field_voer_authors);
  }
}

function _voer_module_create_instance_fields(){
  $instance = array(
      'field_name' => 'field_voer_description',
      'entity_type' => 'node',
      'label' => st('Description'),
      'bundle' => 'voer_module',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
  );
  field_create_instance($instance);

  $instance = array(
    'field_name' => 'field_voer_authors',
    'entity_type' => 'node',
    'label' => st('Authors'),
    'bundle' => 'voer_module',
    'required' => TRUE,
  );
  field_create_instance($instance);

  // CATEGORIES
  $instance = array(
    'field_name' => 'field_voer_categories',
    'entity_type' => 'node',
    'label' => st('Categories'),
    'bundle' => 'voer_module',
    'required' => TRUE,
  );
  field_create_instance($instance);

  // IMAGE
  $instance = array(
      'field_name' => 'field_voer_image',
      'entity_type' => 'node',
      'label' => st('Image'),
      'bundle' => 'voer_module',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
  );
  field_create_instance($instance);

  // LANGUAGE FIELD
  $instance = array(
      'field_name' => 'field_voer_language',
      'entity_type' => 'node',
      'label' => st('Language'),
      'bundle' => 'voer_module',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
  );
  field_create_instance($instance);

  // LANGUAGE FIELD
  $instance = array(
      'field_name' => 'field_voer_file',
      'entity_type' => 'node',
      'label' => st('File'),
      'bundle' => 'voer_module',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => FALSE,
  );
  field_create_instance($instance);

  // KEYWORD FIELD
  $instance = array(
      'field_name' => 'field_voer_keywords',
      'entity_type' => 'node',
      'label' => st('Keywords'),
      'bundle' => 'voer_module',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => FALSE,
  );
  field_create_instance($instance);

  // MATERIAL_ID FIELD
  $instance = array(
    'field_name' => 'field_voer_material_id',
    'entity_type' => 'node',
    'label' => st('Material ID'),
    'bundle' => 'voer_module',
    // If you don't set the "required" property then the field wont be required by default.
    'required' => FALSE,
  );
  field_create_instance($instance);

  // MATERIAL_TYPE
  $instance = array(
    'field_name' => 'field_voer_material_type',
    'entity_type' => 'node',
    'label' => st('Type'),
    'bundle' => 'voer_module',
  );
  field_create_instance($instance);

  // MATERIAL_VERSION
  $instance = array(
    'field_name' => 'field_voer_material_version',
    'entity_type' => 'node',
    'label' => st('Version'),
    'bundle' => 'voer_module',
  );
  field_create_instance($instance);
}

function _voer_collection_create_instance_fields(){
  $instance = array(
      'field_name' => 'field_voer_description',
      'entity_type' => 'node',
      'label' => st('Description'),
      'bundle' => 'voer_collection',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
  );
  field_create_instance($instance);

  // CATEGORIES
  $instance = array(
    'field_name' => 'field_voer_categories',
    'entity_type' => 'node',
    'label' => st('Categories'),
    'bundle' => 'voer_collection',
    'required' => TRUE,
  );
  field_create_instance($instance);

  // IMAGE
  $instance = array(
      'field_name' => 'field_voer_image',
      'entity_type' => 'node',
      'label' => st('Image'),
      'bundle' => 'voer_collection',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
  );
  field_create_instance($instance);

  // LANGUAGE FIELD
  $instance = array(
      'field_name' => 'field_voer_language',
      'entity_type' => 'node',
      'label' => st('Language'),
      'bundle' => 'voer_collection',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
  );
  field_create_instance($instance);

  // FIELD FIELD
  // $instance = array(
  //     'field_name' => 'field_voer_file',
  //     'entity_type' => 'node',
  //     'label' => st('File'),
  //     'bundle' => 'voer_module',
  //     // If you don't set the "required" property then the field wont be required by default.
  //     'required' => FALSE,
  // );
  // field_create_instance($instance);

  // KEYWORD FIELD
  $instance = array(
      'field_name' => 'field_voer_keywords',
      'entity_type' => 'node',
      'label' => st('Keywords'),
      'bundle' => 'voer_collection',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => FALSE,
  );
  field_create_instance($instance);

  // MATERIAL_ID FIELD
  $instance = array(
    'field_name' => 'field_voer_material_id',
    'entity_type' => 'node',
    'label' => st('Material ID'),
    'bundle' => 'voer_collection',
    // If you don't set the "required" property then the field wont be required by default.
    'required' => FALSE,
  );
  field_create_instance($instance);

  // MATERIAL_TYPE
  $instance = array(
    'field_name' => 'field_voer_material_type',
    'entity_type' => 'node',
    'label' => st('Type'),
    'bundle' => 'voer_collection',
  );
  field_create_instance($instance);

  // MATERIAL_VERSION
  $instance = array(
    'field_name' => 'field_voer_material_version',
    'entity_type' => 'node',
    'label' => st('Version'),
    'bundle' => 'voer_collection',
  );
  field_create_instance($instance);
}

function voer_content_uninstall(){
  field_delete_field('field_voer_image');
  field_delete_field('field_voer_language');
  field_delete_field('field_voer_file');
  field_delete_field('field_voer_description');
  field_delete_field('field_voer_keywords');
  field_delete_field('field_voer_material_id');
  field_delete_field('field_voer_material_type');
  field_delete_field('field_voer_material_version');
  field_delete_field('field_voer_categories');
  // field_purge_batch(10); // delete immediately!
}
